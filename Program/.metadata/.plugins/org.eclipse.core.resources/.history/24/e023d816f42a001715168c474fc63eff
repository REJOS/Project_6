/*
 * MemorySystem.cpp
 *
 *  Created on: Apr 17, 2017
 *      Author: john
 */

#include <cstdio>
#include "memorysystem.h"

const char * IN_FILE = "input.txt";
const char * DISK_FILE = "BACKING_STORE";

int main() {

	FILE * input;
	input = fopen(IN_FILE, "r");
	if (input == NULL) {
		printf("Error: could not read %s", IN_FILE);
		return -1;
	}



	fclose(input);



	return 0;
}

int CreateTLB(tlb_t *tlb) {
	return 0;
}

int SearchTLB(u_int_t page_num, tlb_t tlb, bool *is_tlb_hit,
		u_int_t *frame_num) {
	return 0;
}

int CreatePageTable(page_table_t *page_table) {
	return 0;
}

int SearchPageTable(u_int_t page_num, tlb_t tlb, bool *is_tlb_hit,
		u_int_t *frame_num) {
	return 0;
}
int pageFaultHandler(u_int_t page_num, /*???*/u_int_t *physical_memory,
		page_table_t *page_table, tlb_t *tlb) {

	FILE * disk;
	disk = fopen(DISK_FILE, "rb");
	if (disk == NULL) {
		printf("Error: could not read %s", DISK_FILE);
		return -1;
	}

	fclose(disk);

	return 0;
}

u_int_t ParsePageNum(u_int_t logical_addr) {
	return (logical_addr | PAGE_MASK) >> PAGE_SHIFT;
}

u_int_t ParseOffset(u_int_t logical_addr) {
	return (logical_addr | OFFSET_MASK);
}
